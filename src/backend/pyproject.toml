[project]
name = "stonesoup-backend"
version = "0.1.0"
description = "AI-powered community intelligence platform backend"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Web Framework
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "python-multipart>=0.0.6",
    
    # Database
    "sqlalchemy>=2.0.25",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "pgvector>=0.2.4",
    
    # Authentication
    "clerk-backend-api>=0.2.0",
    "pyjwt>=2.8.0",
    "python-jose[cryptography]>=3.3.0",
    
    # AI/ML
    "google-generativeai>=0.3.2",
    "langchain>=0.1.5",
    "langgraph>=0.0.26",
    "numpy>=1.26.3",
    
    # Caching & Background Jobs
    "redis>=5.0.1",
    "celery>=5.3.6",
    
    # Monitoring
    "sentry-sdk[fastapi]>=1.40.0",
    
    # Utilities
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.26.0",
    "tenacity>=8.2.3",
    
    # Development
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    "black>=24.1.1",
    "ruff>=0.1.14",
    "mypy>=1.8.0",
    "types-redis>=4.6.0",
    "factory-boy>=3.3.0",
    "faker>=22.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "PD",  # pandas-vet
]
ignore = ["E501", "B008", "S101"]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"
